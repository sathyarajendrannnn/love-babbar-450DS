
class Solution(object):
    def rotate(self, nums, k):
        n = len(nums)
        k = k % n  
        nums[:] = nums[-k:] + nums[:-k] 

Example 1:
Input: nums = [1, 2, 3, 4, 5, 6, 7], k = 3
Step 1: Calculate the length of the array:
       n = 7
Step 2: Adjust k:
      k = 3 % 7 = 3 (no change since k is less than n)
Step 3: Slice the array:
      nums[-k:] gives us the last 3 elements: [5, 6, 7]
      nums[:-k] gives us the first 4 elements: [1, 2, 3, 4]
Step 4: Combine the slices:
      nums[:] = [5, 6, 7] + [1, 2, 3, 4]
      This results in nums = [5, 6, 7, 1, 2, 3, 4]
Example 2:
      Input: nums = [-1, -100, 3, 99], k = 2
Step 1: Calculate the length of the array:
      n = 4
Step 2: Adjust k:
      k = 2 % 4 = 2 (no change since k is less than n)
Step 3: Slice the array:
      nums[-k:] gives us the last 2 elements: [3, 99]
      nums[:-k] gives us the first 2 elements: [-1, -100]
Step 4: Combine the slices:
      nums[:] = [3, 99] + [-1, -100]
      This results in nums = [3, 99, -1, -100]
