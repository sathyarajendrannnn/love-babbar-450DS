from collections import Counter

class Solution(object):
    def wordSubsets(self, words1, words2):
        """
        :type words1: List[str]
        :type words2: List[str]
        :rtype: List[str]
        """
        # Step 1: Create a frequency count for all characters needed from words2
        max_count = Counter()
        
        for word in words2:
            count = Counter(word)
            for char, freq in count.items():
                max_count[char] = max(max_count[char], freq)

        # Step 2: Check each word in words1
        result = []
        
        for word in words1:
            count = Counter(word)
            # Check if the word meets the requirements
            if all(count[char] >= freq for char, freq in max_count.items()):
                result.append(word)

        return result




Example Input
Input:
words1 = ["amazon", "apple", "facebook", "google", "leetcode"]
words2 = ["e", "o"]
Step-by-Step Breakdown
Count Character Frequencies in words2:
We need to determine the maximum frequency of each character required by all words in words2.
For words2 = ["e", "o"]:
For the word "e":
Character count = {'e': 1}
For the word "o":
Character count = {'o': 1}
Combine these frequency counts:
max_count = {'e': 1, 'o': 1}
Check Each Word in words1:
Now, we will check each word in words1 against the max_count to see if it can satisfy the requirements.
Word: "amazon"
Character count = {'a': 1, 'm': 1, 'z': 1, 'o': 1, 'n': 1}
Check:
'e': 1 (not present) → Not universal
Word: "apple"
Character count = {'a': 1, 'p': 2, 'l': 1, 'e': 1}
Check:
'o': 1 (not present) → Not universal
Word: "facebook"
Character count = {'f': 1, 'a': 1, 'c': 1, 'e': 1, 'b': 1, 'k': 1, 'o': 1}
Check:
Both 'e': 1 and 'o': 1 are present → Universal
Word: "google"
Character count = {'g': 2, 'o': 1, 'l': 1, 'e': 1}
Check:
Both 'e': 1 and 'o': 1 are present → Universal
Word: "leetcode"
Character count = {'l': 1, 'e': 2, 't': 1, 'c': 1, 'o': 1, 'd': 1}
Check:
Both 'e': 1 and 'o': 1 are present → Universal
Collect Universal Words:
From the checks above, the universal words from words1 that satisfy the conditions for words2 are:
["facebook", "google", "leetcode"]
Conclusion
For the input:
words1 = ["amazon", "apple", "facebook", "google", "leetcode"]
words2 = ["e", "o"]
The output is:
Output: ["facebook", "google", "leetcode"]
