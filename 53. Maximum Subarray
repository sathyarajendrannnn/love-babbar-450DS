class Solution(object):
    def maxSubArray(self, nums):
        mi=nums[0]
        s=0
        for i in nums:
            s=s+i
            mi=max(mi,s)
            if s<0:
                s=0
        print(mi)
        return mi

Explanation:
Consider the array nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4].

Step-by-Step Execution:
Initialization:

mi = -2 (the first element)
s = 0 (current sum starts at 0)
Iteration:

First element: i = -2

s = s + i = 0 + (-2) = -2
Update mi = max(mi, s) = max(-2, -2) = -2
s < 0, so reset s = 0
Second element: i = 1

s = s + i = 0 + 1 = 1
Update mi = max(mi, s) = max(-2, 1) = 1
s remains 1 (no reset)
Third element: i = -3

s = s + i = 1 + (-3) = -2
mi = max(mi, s) = max(1, -2) = 1
s < 0, so reset s = 0
Fourth element: i = 4

s = s + i = 0 + 4 = 4
Update mi = max(mi, s) = max(1, 4) = 4
s remains 4 (no reset)
Fifth element: i = -1

s = s + i = 4 + (-1) = 3
mi = max(mi, s) = max(4, 3) = 4
s remains 3 (no reset)
Sixth element: i = 2

s = s + i = 3 + 2 = 5
Update mi = max(mi, s) = max(4, 5) = 5
s remains 5 (no reset)
Seventh element: i = 1

s = s + i = 5 + 1 = 6
Update mi = max(mi, s) = max(5, 6) = 6
s remains 6 (no reset)
Eighth element: i = -5

s = s + i = 6 + (-5) = 1
mi = max(mi, s) = max(6, 1) = 6
s remains 1 (no reset)
Ninth element: i = 4

s = s + i = 1 + 4 = 5
mi = max(mi, s) = max(6, 5) = 6
Final Result:

The maximum sum found is 6, which corresponds to the subarray [4, -1, 2, 1].
