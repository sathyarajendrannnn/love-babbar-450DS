class Solution(object):
    def canJump(self, nums):
        max_reachable = 0
        for i in range(len(nums)):
            if i > max_reachable:
                return False
            max_reachable = max(max_reachable, i + nums[i])
        return True
Example Walkthrough
Let's consider the example nums = [2, 3, 1, 1, 4].
Initialization: max_reachable = 0
Iteration Steps:
Step 1 (i = 0):
Current index: 0
Check: 0 > 0 (False)
Update: max_reachable = max(0, 0 + 2) = 2
Step 2 (i = 1):
Current index: 1
Check: 1 > 2 (False)
Update: max_reachable = max(2, 1 + 3) = 4
Step 3 (i = 2):
Current index: 2
Check: 2 > 4 (False)
Update: max_reachable = max(4, 2 + 1) = 4
Step 4 (i = 3):
Current index: 3
Check: 3 > 4 (False)
Update: max_reachable = max(4, 3 + 1) = 4
Step 5 (i = 4):
Current index: 4
Check: 4 > 4 (False)
Update: max_reachable = max(4, 4 + 4) = 8
Conclusion: Since we have iterated through all indices without returning False, we can reach the last index. Thus, the output is True.
